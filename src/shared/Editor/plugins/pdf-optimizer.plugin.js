/**
 * –ü–ª–∞–≥–∏–Ω –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–¥ PDF
 * - –ò–∑–º–µ—Ä—è–µ—Ç –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–±–∏–≤–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * - –í—Å—Ç–∞–≤–ª—è–µ—Ç –º–∞—Ä–∫–µ—Ä—ã page-break
 */

import { Jodit } from 'jodit';

const PAGE_HEIGHT = 900; // px - –≤—ã—Å–æ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã PDF (—Å –∑–∞–ø–∞—Å–æ–º –¥–ª—è —Ñ—É—Ç–µ—Ä–∞)
const PAGE_WIDTH = 1920; // px - —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã PDF
const CONTENT_PADDING = 50; // px - –æ—Ç—Å—Ç—É–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞

/**
 * –°–æ–∑–¥–∞–µ—Ç HTML –º–∞—Ä–∫–µ—Ä–∞ —Ä–∞–∑—Ä—ã–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
export function createPageBreakHTML(pageNumber) {
  return `
    <div class="pdf-page-break" contenteditable="false" style="
      page-break-after: always;
      break-after: page;
      margin: 20px 0;
      padding: 10px;
      background: #e6f7ff;
      border: 2px dashed #1890ff;
      border-radius: 4px;
      text-align: center;
      color: #1890ff;
      font-size: 12px;
      font-weight: 600;
      cursor: default;
      user-select: none;
    ">
      üìÑ –†–∞–∑—Ä—ã–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${pageNumber})
    </div>
  `.trim();
}

/**
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ä–∫–µ—Ä—ã —Ä–∞–∑—Ä—ã–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
 */
export function removeAllPageBreaks(editor) {
  const pageBreaks = editor.editor.querySelectorAll('.pdf-page-break');
  pageBreaks.forEach((el) => el.remove());
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –≤—ã—Å–æ—Ç—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
 */
export function calculateContentHeight(editor) {
  const editorElement = editor.editor;
  if (!editorElement) return 0;

  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è
  const tempContainer = document.createElement('div');
  tempContainer.style.cssText = `
    position: absolute;
    left: -9999px;
    top: -9999px;
    width: ${PAGE_WIDTH - CONTENT_PADDING * 2}px;
    visibility: hidden;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
  `;

  // –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç (–±–µ–∑ page-breaks)
  const contentClone = editorElement.cloneNode(true);
  const pageBreaks = contentClone.querySelectorAll('.pdf-page-break');
  pageBreaks.forEach((el) => el.remove());

  tempContainer.innerHTML = contentClone.innerHTML;
  document.body.appendChild(tempContainer);

  const height = tempContainer.offsetHeight;
  document.body.removeChild(tempContainer);

  return height;
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è PDF - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä—ã–≤—ã —Å—Ç—Ä–∞–Ω–∏—Ü
 */
export function optimizeForPDF(editor) {
  console.log('[PDF Optimizer] –ù–∞—á–∞–ª–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏');

  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–∞–∑—Ä—ã–≤—ã
  removeAllPageBreaks(editor);

  const editorElement = editor.editor;
  if (!editorElement) {
    console.error('[PDF Optimizer] editorElement –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return 1;
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ top-level —ç–ª–µ–º–µ–Ω—Ç—ã
  let elements = Array.from(editorElement.children).filter(
    el => !el.classList.contains('pdf-page-break')
  );

  console.log('[PDF Optimizer] –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.length);
  console.log('[PDF Optimizer] –¢–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.map(el => el.tagName).join(', '));

  // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –µ—Å—Ç—å - –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  if (elements.length <= 2 && editorElement.textContent.length > 100) {
    console.log('[PDF Optimizer] –ú–∞–ª–æ top-level —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∏—â–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã, –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–ø–∏—Å–∫–∏
    const nestedElements = Array.from(
      editorElement.querySelectorAll('p, h1, h2, h3, h4, h5, h6, ul, ol, blockquote, pre, table')
    );

    if (nestedElements.length > elements.length) {
      elements = nestedElements;
      console.log('[PDF Optimizer] –ù–∞–π–¥–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', elements.length);
    }
  }

  if (elements.length === 0) {
    console.error('[PDF Optimizer] –ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
    return 1;
  }

  // –°–æ–∑–¥–∞–µ–º –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–ø—Ä–æ—â–µ —á–µ–º iframe)
  const measureContainer = document.createElement('div');
  measureContainer.style.cssText = `
    position: absolute;
    left: -9999px;
    top: -9999px;
    width: ${PAGE_WIDTH - CONTENT_PADDING * 2}px;
    visibility: hidden;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
  `;
  document.body.appendChild(measureContainer);

  const fragments = [];
  let currentFragment = [];
  let currentHeight = 0;
  let pageNumber = 1;
  const pageLimit = PAGE_HEIGHT - CONTENT_PADDING * 2;

  console.log('[PDF Optimizer] –õ–∏–º–∏—Ç –≤—ã—Å–æ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageLimit, 'px');

  elements.forEach((el, index) => {
    // –ò–∑–º–µ—Ä—è–µ–º –≤—ã—Å–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–∞
    const clone = el.cloneNode(true);
    measureContainer.innerHTML = '';
    measureContainer.appendChild(clone);
    const elHeight = measureContainer.offsetHeight;

    console.log(`[PDF Optimizer] –≠–ª–µ–º–µ–Ω—Ç #${index} (${el.tagName}): ${elHeight}px, —Ç–µ–∫—É—â–∞—è –≤—ã—Å–æ—Ç–∞: ${currentHeight}px`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–ª–µ–∑–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (currentHeight + elHeight > pageLimit && currentFragment.length > 0) {
      // –ù–µ –≤–ª–µ–∑–∞–µ—Ç - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      console.log(`[PDF Optimizer] –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –≤–ª–µ–∑, —Å–æ–∑–¥–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É #${pageNumber}`);

      fragments.push({
        elements: [...currentFragment],
        pageNumber: pageNumber++,
      });

      currentFragment = [el];
      currentHeight = elHeight;
    } else {
      // –í–ª–µ–∑–∞–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç
      currentFragment.push(el);
      currentHeight += elHeight;
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç
  if (currentFragment.length > 0) {
    fragments.push({
      elements: currentFragment,
      pageNumber: pageNumber,
    });
    console.log(`[PDF Optimizer] –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ #${pageNumber}`);
  }

  // –û—á–∏—â–∞–µ–º –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  document.body.removeChild(measureContainer);

  console.log('[PDF Optimizer] –í—Å–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ (—Å—Ç—Ä–∞–Ω–∏—Ü):', fragments.length);

  // –í—Å—Ç–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä—ã–≤—ã –º–µ–∂–¥—É —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏
  if (fragments.length > 1) {
    console.log('[PDF Optimizer] –í—Å—Ç–∞–≤–ª—è—é —Ä–∞–∑—Ä—ã–≤—ã —Å—Ç—Ä–∞–Ω–∏—Ü');

    // –°—Ç—Ä–æ–∏–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ä–∞–∑—Ä—ã–≤–∞–º–∏
    editorElement.innerHTML = '';

    fragments.forEach((fragment, index) => {
      console.log(`[PDF Optimizer] –î–æ–±–∞–≤–ª—è—é —Ñ—Ä–∞–≥–º–µ–Ω—Ç #${index + 1}, —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${fragment.elements.length}`);

      // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
      fragment.elements.forEach((el) => {
        editorElement.appendChild(el);
      });

      // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä—ã–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞)
      if (index < fragments.length - 1) {
        const pageBreakEl = document.createElement('div');
        pageBreakEl.innerHTML = createPageBreakHTML(fragment.pageNumber + 1);
        const pageBreak = pageBreakEl.firstElementChild;
        editorElement.appendChild(pageBreak);
        console.log(`[PDF Optimizer] –í—Å—Ç–∞–≤–ª–µ–Ω —Ä–∞–∑—Ä—ã–≤ –ø–µ—Ä–µ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π #${fragment.pageNumber + 1}`);
      }
    });

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    editor.synchronizeValues();

    console.log('[PDF Optimizer] –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å—Ç—Ä–∞–Ω–∏—Ü:', fragments.length);
    return fragments.length;
  }

  console.log('[PDF Optimizer] –†–∞–∑–±–∏–≤–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–≤—Å—ë –≤–ª–µ–∑–ª–æ –Ω–∞ 1 —Å—Ç—Ä–∞–Ω–∏—Ü—É)');
  return 1;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è PDF" –≤ toolbar
 */
export default function addPdfOptimizerPlugin(editor, onHeightChange) {
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –î–û –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
  // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ afterInit, –ø–æ—ç—Ç–æ–º—É –∫–Ω–æ–ø–∫–∞ —É–∂–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞

  // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã
  editor.events.on('change', () => {
    if (onHeightChange) {
      updateHeight(editor, onHeightChange);
    }
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  setTimeout(() => {
    if (onHeightChange) {
      updateHeight(editor, onHeightChange);
    }
  }, 300);
}

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –≤ Jodit (–Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –î–û —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞)
 */
export function registerPdfOptimizeButton() {
  if (!Jodit || !Jodit.defaultOptions) return;

  Jodit.defaultOptions.controls.pdfOptimize = {
    icon: '<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',
    tooltip: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è PDF (–∞–≤—Ç–æ-—Ä–∞–∑–±–∏–≤–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã)',
    exec: function (editor) {
      try {
        const pagesCount = optimizeForPDF(editor);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ Jodit
        editor.message.success(`–ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–±–∏—Ç –Ω–∞ ${pagesCount} —Å—Ç—Ä–∞–Ω–∏—Ü(—ã)`, 3000);

        // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
        editor.events.fire('change', editor.value);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ PDF:', error);
        editor.message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞', 3000);
      }
    }
  };
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã—Å–æ—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
function updateHeight(editor, callback) {
  const height = calculateContentHeight(editor);
  const pagesCount = Math.ceil(height / (PAGE_HEIGHT - CONTENT_PADDING * 2));

  callback({
    height,
    pagesCount,
    pageHeight: PAGE_HEIGHT,
  });
}
